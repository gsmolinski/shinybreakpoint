% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shinybreakpoint_mod.R
\name{shinybreakpointServer}
\alias{shinybreakpointServer}
\title{Use Module to Set Breakpoint}
\usage{
shinybreakpointServer(
  keyEvent = "F1",
  id = "shinybreakpoint",
  varName = "....envirr"
)
}
\arguments{
\item{keyEvent}{key to run modal dialog with the functionality
to set breakpoint. \code{"F1"} by default.}

\item{id}{namespace used for all inputs in this module.
\code{"shinybreakpoint"} by default. Change if in the app some
other module is used which already has \code{"shinybreakpoint"}
namespace.}

\item{varName}{setting breakpoint is not equal to inserting only
\code{browser()}, but also additional code, one of which is assignment
operation. This parameter determines the variable name to assign
value. \code{"....envirr"} by default. Change if this name is already
in use somewhere in the app.}
}
\value{
Used for side effect - adds modal dialog to the Shiny app
with the options to set breakpoint. Modal dialog is shown
when the key specified in \code{keyEvent} is pressed.
}
\description{
Module of Shiny app needed to enable functionality to
setting breakpoint. Must be used in the \code{server} part of
Shiny app or in the function which is then used in the
\code{server} part of app.
}
\details{
One of the core concepts which founds this module is the
necessity to re-run the objects present in the \code{server}
part of app. This is possible only when these objects
do not live directly in the \code{server}, but in the function
which is then used in \code{server}. This naturally harmonizes
with the modules, but it needs the separate function for
objects which would be used directly in the \code{server}
(see example).
}
\examples{
# To run example, copy-paste to file, save the file
# and run the app. Then press "F1" to open the modal dialog.

\dontrun{
library(shiny)

server_app <- function(input, output, session) {
  observe({
    input$num
  })
}

shinyApp(
  ui = fluidPage(
    numericInput("num", "Num", 0)
  ),
  server = function(input, output, session) {
    shinybreakpoint::shinybreakpointServer()
    server_app(input, output, session)
  }
)
}
}
